name: "Backend Deployment"

on:
  push:
    branches:
      - staging
      - main
    paths:
      - 'backend/**'
      - '!backend/README.md'
      - '!backend/docs/**'

jobs:
  deploy:
    name: "Deploy Backend"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials for Spaces
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.SPACES_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SPACES_SECRET_KEY }}
          aws-region: us-east-1 # Required but ignored for DO Spaces

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/flowdose-do
          chmod 600 ~/.ssh/flowdose-do
          ssh-keyscan -H $(cd terraform && terraform output -raw backend_ip 2>/dev/null || echo "staging-flowdose-backend.domain.com") >> ~/.ssh/known_hosts

      - name: Determine Environment
        id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
        env:
          TF_CLI_ARGS_init: "-backend-config='access_key=${{ secrets.SPACES_ACCESS_KEY }}' -backend-config='secret_key=${{ secrets.SPACES_SECRET_KEY }}'"

      - name: Get Backend IP
        id: backend_ip
        working-directory: ./terraform
        run: |
          BACKEND_IP=$(terraform output -raw backend_ip)
          echo "ip=$BACKEND_IP" >> $GITHUB_OUTPUT

      - name: Setup Environment Variables
        working-directory: ./scripts
        run: |
          BACKEND_IP="${{ steps.backend_ip.outputs.ip }}"
          STOREFRONT_IP=$(cd ../terraform && terraform output -raw storefront_ip)
          ./setup-env.sh ${{ steps.vars.outputs.environment }} $BACKEND_IP $STOREFRONT_IP

      - name: Deploy Backend
        working-directory: ./scripts
        run: |
          BACKEND_IP="${{ steps.backend_ip.outputs.ip }}"
          ./deploy-backend.sh ${{ steps.vars.outputs.environment }} $BACKEND_IP 