name: Deploy to Staging

on:
  push:
    branches: [ staging ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}

      - name: Deploy Backend
        env:
          BACKEND_HOST: ${{ secrets.STAGING_BACKEND_HOST }}
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
        run: |
          # Add host to known_hosts
          ssh-keyscan -H $BACKEND_HOST >> ~/.ssh/known_hosts

          # Copy deployment files to server
          rsync -avz --exclude node_modules --exclude .git ./backend/ $SSH_USER@$BACKEND_HOST:/home/$SSH_USER/app/
          
          # Execute deployment script on server
          ssh $SSH_USER@$BACKEND_HOST 'cd /home/$SSH_USER/app && bash scripts/deploy.sh'

      - name: Deploy Storefront
        env:
          STOREFRONT_HOST: ${{ secrets.STAGING_STOREFRONT_HOST }}
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
        run: |
          # Add host to known_hosts
          ssh-keyscan -H $STOREFRONT_HOST >> ~/.ssh/known_hosts
          
          # Copy deployment files to server
          rsync -avz --exclude node_modules --exclude .git ./storefront/ $SSH_USER@$STOREFRONT_HOST:/home/$SSH_USER/app/
          
          # Execute deployment script on server
          ssh $SSH_USER@$STOREFRONT_HOST 'cd /home/$SSH_USER/app && bash scripts/deploy.sh' 