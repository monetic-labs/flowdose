name: Deploy Backend

on:
  push:
    branches: [main, staging]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
      - 'deploy-backend-trigger'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}
    
    env:
      NODE_ENV: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}
      GITHUB_ACTIONS: "true"
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare yarn@4.4.0 --activate
      
      - name: Install dependencies
        working-directory: backend
        run: yarn install
      
      - name: Run tests
        working-directory: backend
        run: yarn test || echo "No tests found, continuing..."
      
      - name: Build application
        working-directory: backend
        run: yarn build
      
      - name: Generate environment file
        run: |
          cat > backend/.env.${{ env.NODE_ENV }} << EOL
          DATABASE_URL=${{ secrets.BACKEND_DATABASE_URL }}
          REDIS_URL=${{ secrets.BACKEND_REDIS_URL }}
          JWT_SECRET=${{ secrets.BACKEND_JWT_SECRET }}
          COOKIE_SECRET=${{ secrets.BACKEND_COOKIE_SECRET }}
          MEDUSA_ADMIN_CORS=${{ secrets.BACKEND_MEDUSA_ADMIN_CORS }}
          MEDUSA_STORE_CORS=${{ secrets.BACKEND_MEDUSA_STORE_CORS }}
          STORE_CORS=${{ secrets.BACKEND_STORE_CORS }}
          MEDUSA_BACKEND_URL=${{ secrets.BACKEND_MEDUSA_BACKEND_URL }}
          EOL
          # Copy to temp location for deployment
          mkdir -p /tmp
          cp backend/.env.${{ env.NODE_ENV }} /tmp/backend.env
      
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add host key to known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_HOST_KEY }}" >> ~/.ssh/known_hosts
      
      - name: Copy environment file to server
        run: |
          scp -o StrictHostKeyChecking=no /tmp/backend.env root@${{ secrets[format('BACKEND_{0}_IP', env.NODE_ENV == 'production' && 'PROD' || 'STAGING')] }}:/tmp/backend.env
      
      - name: Deploy to ${{ env.NODE_ENV }}
        run: |
          chmod +x ./scripts/deploy-backend.sh
          set -e  # Exit immediately if a command fails
          echo "Deploying to ${{ env.NODE_ENV }} environment using IP ${{ secrets[format('BACKEND_{0}_IP', env.NODE_ENV == 'production' && 'PROD' || 'STAGING')] }}"
          # Export the DB_PASSWORD so it's accessible to the SSH session
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          # Pass DB_PASSWORD as an environment variable to the SSH session
          ./scripts/deploy-backend.sh ${{ env.NODE_ENV }} ${{ secrets[format('BACKEND_{0}_IP', env.NODE_ENV == 'production' && 'PROD' || 'STAGING')] }}
      
      - name: Verify deployment
        if: success()
        run: |
          echo "Backend successfully deployed to ${{ env.NODE_ENV }} environment!" 