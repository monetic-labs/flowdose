#!/bin/bash\nset -e  # Exit immediately if a command fails\n\n# Default parameters\nSERVER_IP=${1}\nSSH_USER=${2:-root}\nSSH_KEY_PATH=${3:-~/.ssh/flowdose-do}\nENVIRONMENT=${4:-staging}\n\n# Validate parameters\nif [ -z \"$SERVER_IP\" ]; then\n  echo \"ERROR: Server IP address is required\"\n  echo \"Usage: $0 <server_ip> [ssh_user] [ssh_key_path] [environment]\"\n  exit 1\nfi\n\necho \"===================================================\"\necho \"Configuring Nginx for Backend API and Admin Panel\"\necho \"===================================================\"\necho \"Server IP: $SERVER_IP\"\necho \"SSH User: $SSH_USER\"\necho \"Environment: $ENVIRONMENT\"\n\nAPI_DOMAIN=\"api-${ENVIRONMENT}.flowdose.xyz\"\nADMIN_DOMAIN=\"admin-${ENVIRONMENT}.flowdose.xyz\"\n\n# Nginx configuration content\nAPI_CONFIG=\"\\\nserver {\n    listen 80;\n    server_name ${API_DOMAIN};\n\n    location / {\n        proxy_pass http://localhost:9000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade \\\\\$http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host \\\\\$host;\n        proxy_set_header X-Real-IP \\\\\$remote_addr;\n        proxy_set_header X-Forwarded-For \\\\\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\\\\$scheme;\n        proxy_cache_bypass \\\\\$http_upgrade;\n    }\n}\"\n\nADMIN_CONFIG=\"\\\nserver {\n    listen 80;\n    server_name ${ADMIN_DOMAIN};\n\n    root /usr/share/nginx/admin;\n    index index.html;\n\n    # Handle static assets with correct path\n    location /app/assets/ {\n        alias /usr/share/nginx/admin/assets/;\n        expires 30d;\n        add_header Cache-Control \\\"public, max-age=2592000\\\";\n        try_files \\\\\$uri =404; # Return 404 if asset not found in alias path\n    }\n\n    # Handle SPA routing\n    location / {\n        try_files \\\\\$uri \\\\\$uri/ /index.html;\n        add_header X-Frame-Options \\\"SAMEORIGIN\\\";\n        add_header X-XSS-Protection \\\"1; mode=block\\\";\n        add_header X-Content-Type-Options \\\"nosniff\\\";\n    }\n\n    # Redirect specific backend paths if needed (optional, API server block handles API)\n    # Example: If admin frontend specifically calls /admin/auth\n    # location /admin/auth {\n    #    return 301 https://${API_DOMAIN}\\\$request_uri;\n    # }\n}\"\n\n# Commands to execute on the remote server\nREMOTE_COMMANDS=\"\\\n# Ensure target directories exist\nmkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled\n\n# Write API config\necho \\\"${API_CONFIG}\\\" | sudo tee /etc/nginx/sites-available/${API_DOMAIN} > /dev/null\n\n# Write Admin config\necho \\\"${ADMIN_CONFIG}\\\" | sudo tee /etc/nginx/sites-available/${ADMIN_DOMAIN} > /dev/null\n\n# Remove potential old/conflicting default symlink\nsudo rm -f /etc/nginx/sites-enabled/default\nsudo rm -f /etc/nginx/sites-enabled/flowdose # Remove the one from server-setup.sh if it exists\n\n# Enable new sites by creating symlinks\nsudo ln -sf /etc/nginx/sites-available/${API_DOMAIN} /etc/nginx/sites-enabled/${API_DOMAIN}\nsudo ln -sf /etc/nginx/sites-available/${ADMIN_DOMAIN} /etc/nginx/sites-enabled/${ADMIN_DOMAIN}\n\n# Test Nginx configuration\necho \'Testing Nginx configuration...\'\nsudo nginx -t\nif [ \\\$? -ne 0 ]; then\n  echo \'ERROR: Nginx configuration test failed\'\n  exit 1\nfi\n\n# Reload Nginx\necho \'Reloading Nginx...\'\nsudo systemctl reload nginx\n\necho \'Nginx configured and reloaded successfully for API and Admin.\'\nexit 0\n\"\n\n# Execute commands on the remote server\necho \"Applying Nginx configuration on the server...\"\nssh -o StrictHostKeyChecking=no -i \"$SSH_KEY_PATH\" \"$SSH_USER@$SERVER_IP\" \"$REMOTE_COMMANDS\"\n\n# Check the exit status of the SSH command\nif [ $? -eq 0 ]; then\n  echo -e \"\\nNginx configuration applied successfully.\"\nelse\n  echo -e \"\\nNginx configuration failed.\"\n  exit 1\nfi\n\necho \"===================================================\"\necho \"Nginx configuration step completed!\"\necho \"===================================================\" 