variable "do_token" {
  description = "DigitalOcean API token"
  type        = string
  sensitive   = true
}

variable "region" {
  description = "DigitalOcean region"
  type        = string
  default     = "sfo3"
}

variable "spaces_region" {
  description = "DigitalOcean Spaces region"
  type        = string
  default     = "sfo3"
}

variable "environment" {
  description = "Environment (staging or production)"
  type        = string
  default     = "staging"
}

# Droplet configuration
variable "droplet_image" {
  description = "Droplet image slug or ID"
  type        = string
  default     = "ubuntu-22-04-x64"
}

variable "backend_droplet_size" {
  description = "Size of the backend droplet"
  type        = string
  default     = "s-2vcpu-2gb"
}

variable "storefront_droplet_size" {
  description = "Size of the storefront droplet"
  type        = string
  default     = "s-2vcpu-2gb"
}

variable "ssh_key_ids" {
  description = "List of SSH key IDs to add to droplets"
  type        = list(string)
  default     = []
}

variable "ssh_public_key" {
  description = "SSH public key to add to droplets (generated in CI/CD)"
  type        = string
  default     = ""
}

variable "admin_ssh_public_key" {
  description = "Admin SSH public key for persistent access to droplets"
  type        = string
  default     = ""
}

variable "ssh_private_key_path" {
  description = "Path to SSH private key used for provisioning"
  type        = string
  default     = "~/.ssh/id_rsa"
}

variable "additional_tags" {
  description = "Additional tags to apply to resources"
  type        = list(string)
  default     = []
}

# Database configuration
variable "db_size" {
  description = "Size of the database cluster"
  type        = string
  default     = "db-s-1vcpu-1gb"
}

variable "postgres_version" {
  description = "PostgreSQL version to use"
  type        = string
  default     = "15"
}

variable "redis_size" {
  description = "Size of the Redis cluster"
  type        = string
  default     = "db-s-1vcpu-1gb"
}

variable "redis_version" {
  description = "Redis version to use"
  type        = string
  default     = "7"
}

# Admin user
variable "admin_email" {
  description = "Admin user email"
  type        = string
  default     = "admin@flowdose.xyz"
}

variable "admin_password" {
  description = "Admin user password"
  type        = string
  sensitive   = true
}

# Security
variable "jwt_secret" {
  description = "JWT secret for authentication"
  type        = string
  sensitive   = true
}

variable "cookie_secret" {
  description = "Cookie secret for sessions"
  type        = string
  sensitive   = true
}

variable "revalidate_secret" {
  description = "Secret for revalidating Next.js cache"
  type        = string
  sensitive   = true
}

# Email configuration
variable "resend_api_key" {
  description = "Resend API key"
  type        = string
  sensitive   = true
}

variable "resend_from" {
  description = "Email address to send from"
  type        = string
  default     = "no-reply@flowdose.xyz"
}

# Spaces/S3 credentials
variable "spaces_access_key" {
  description = "DigitalOcean Spaces access key"
  type        = string
  sensitive   = true
}

variable "spaces_secret_key" {
  description = "DigitalOcean Spaces secret key"
  type        = string
  sensitive   = true
}

# Medusa
variable "medusa_publishable_key" {
  description = "Medusa publishable API key"
  type        = string
  sensitive   = true
  default     = "" # Will be generated by the backend after deployment
}

# Region settings
variable "default_region" {
  description = "Default region for the store"
  type        = string
  default     = "US"
}

# Analytics
variable "google_analytics_id" {
  description = "Google Analytics ID"
  type        = string
  default     = ""
}

# Deployment
variable "force_deploy_backend" {
  description = "Force backend deployment even if environment hasn't changed"
  type        = bool
  default     = false
}

variable "force_deploy_storefront" {
  description = "Force storefront deployment even if environment hasn't changed"
  type        = bool
  default     = false
}

variable "enable_ssl" {
  description = "Whether to enable SSL certificate provisioning (can be disabled for troubleshooting)"
  type        = bool
  default     = true
}
